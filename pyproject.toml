[build-system]
requires = ["scikit-build-core", "pybind11", "stormpy>=1.11.2"]
build-backend = "scikit_build_core.build"

[project]
name = "paynt"
description = "PAYNT - Probabilistic progrAm sYNThesizer"
readme = "README.md"
license.file = "LICENSE"
dynamic = ["version"]
authors = [
    { name = "R. Andriushchenko", email = "iandri@fit.vut.cz" },
    { name = "F. MacÃ¡k", email = "imacak@fit.vut.cz" },
]
requires-python = ">=3.10"
dependencies = [
    "stormpy>=1.11.2",
    "z3-solver>=4.14.0.0",
    "click>=8.1.3",
    "psutil>=7.0.0",
    "graphviz>=0.20.1",
]
classifiers = [
    'Intended Audience :: Science/Research',
    'Topic :: Scientific/Engineering',
    'Topic :: Software Development :: Libraries :: Python Modules',
]
keywords = [
    "stormpy", 
    "synthesis", 
    "paynt", 
    "storm",
]

[project.urls]
Homepage = "https://github.com/randriu/synthesis"
"Bug Tracker" = "https://github.com/randriu/synthesis/issues"

[project.optional-dependencies]
numpy = [
    "numpy"
]
plot = [
    "matplotlib",
    "numpy",
    "scipy",
]
dev = [
    # Formatting
    "black[jupyter]",
]
test = [
    "pytest",
    "nbval",
    "numpy",
]

[tool.scikit-build]
cmake.build-type = "Release"
build-dir = "build/{wheel_tag}"
# wheel.install-dir = "paynt"
cmake.args = []
wheel.packages = ["paynt", "payntbind/lib/payntbind"]
sdist.include = [
    "payntbind/lib/payntbind/info/_config.py",
]

[tool.scikit-build.cmake.define]
STORM_DIR_HINT=""
ALLOW_STORM_SYSTEM="ON"
ALLOW_STORM_FETCH="ON"
STORM_GIT_REPO="https://github.com/moves-rwth/storm.git"
STORM_GIT_TAG="master"

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.regex"
input = "paynt/_version.py"

[tool.cibuildwheel]
manylinux-x86_64-image = "manylinux_2_34"
skip = "*musllinux*"

[tool.cibuildwheel.linux]
before-all = ".github/workflows/before-all-linux.sh"
repair-wheel-command = "auditwheel show --disable-isa-ext-check {wheel} && auditwheel repair --disable-isa-ext-check -w {dest_dir} {wheel}"

[tool.cibuildwheel.macos]
before-all = ".github/workflows/before-all-macos.sh"
repair-wheel-command = "delocate-listdeps -vv --depending --all {wheel} && DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}"

[tool.black]
line-length = 160

[project.scripts]
paynt = "paynt.cli:main"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--nbval"
testpaths = [
    "tests",
    "payntbind/tests",
]
python_files = [
    "test*.py",
]
python_functions = [
    "*_test",
    "test_*",
]
