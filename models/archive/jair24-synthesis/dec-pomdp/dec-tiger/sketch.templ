
dtmc


const double discount=1;

// agent 1 holes
hole int M1_0_0 in {0,1};
hole int M1_0_1 in {0,1};
hole int M1_1_0 in {0,1};
hole int M1_1_1 in {0,1};
hole int P1_0_0 in {0,1,2};
hole int P1_0_1 in {0,1,2};
hole int P1_1_0 in {0,1,2};
hole int P1_1_1 in {0,1,2};

// agent 2 holes
hole int M2_0_1 in {0,1};
hole int M2_0_0 in {0,1};
hole int M2_1_1 in {0,1};
hole int M2_1_0 in {0,1};
hole int P2_0_1 in {0,1,2};
hole int P2_0_0 in {0,1,2};
hole int P2_1_1 in {0,1,2};
hole int P2_1_0 in {0,1,2};

hole int INIT_A1 in {0,1,2};
hole int INIT_A2 in {0,1,2};

module strategy1
	mem : [0..1] init 0;

	[act]  mem=0 & o1=0  -> (mem'=M1_0_0);
	[act]  mem=0 & o1=1 -> (mem'=M1_0_1);
	[act]  mem=1 & o1=0  -> (mem'=M1_1_0);
	[act]  mem=1 & o1=1 -> (mem'=M1_1_1);
endmodule

module strategy2
	mem2 : [0..1] init 0;

	[act]  mem2=0 & o2=0  -> (mem2'=M2_0_0);
	[act]  mem2=0 & o2=1  -> (mem2'=M2_0_1);
	[act]  mem2=1 & o2=0  -> (mem2'=M2_1_0);
	[act]  mem2=1 & o2=1  -> (mem2'=M2_1_1);
endmodule


module tiger

	pos : [0..1] init 0;
    o1 : [0..1] init 0;
    o2 : [0..1] init 0;
    act : [0..2] init 0;
    act2 : [0..2] init 0;

    [in] true -> 0.5: (pos'=0)&(act'=INIT_A1)&(act2'=INIT_A2) + 0.5: (pos'=1)&(act'=INIT_A1)&(act2'=INIT_A2);

    [choose] o1=0 & o2=0 & mem=0 & mem2=0 -> 1: (act'=P1_0_0)&(act2'=P2_0_0);
    [choose] o1=0 & o2=0 & mem=1 & mem2=0 -> 1: (act'=P1_1_0)&(act2'=P2_0_0);
    [choose] o1=0 & o2=0 & mem=0 & mem2=1 -> 1: (act'=P1_0_0)&(act2'=P2_1_0);
    [choose] o1=0 & o2=0 & mem=1 & mem2=1 -> 1: (act'=P1_1_0)&(act2'=P2_1_0);

    [choose] o1=1 & o2=0 & mem=0 & mem2=0 -> 1: (act'=P1_0_1)&(act2'=P2_0_0);
    [choose] o1=1 & o2=0 & mem=1 & mem2=0 -> 1: (act'=P1_1_1)&(act2'=P2_0_0);
    [choose] o1=1 & o2=0 & mem=0 & mem2=1 -> 1: (act'=P1_0_1)&(act2'=P2_1_0);
    [choose] o1=1 & o2=0 & mem=1 & mem2=1 -> 1: (act'=P1_1_1)&(act2'=P2_1_0);

    [choose] o1=0 & o2=1 & mem=0 & mem2=0 -> 1: (act'=P1_0_0)&(act2'=P2_0_1);
    [choose] o1=0 & o2=1 & mem=1 & mem2=0 -> 1: (act'=P1_1_0)&(act2'=P2_0_1);
    [choose] o1=0 & o2=1 & mem=0 & mem2=1 -> 1: (act'=P1_0_0)&(act2'=P2_1_1);
    [choose] o1=0 & o2=1 & mem=1 & mem2=1 -> 1: (act'=P1_1_0)&(act2'=P2_1_1);

    [choose] o1=1 & o2=1 & mem=0 & mem2=0 -> 1: (act'=P1_0_1)&(act2'=P2_0_1);
    [choose] o1=1 & o2=1 & mem=1 & mem2=0 -> 1: (act'=P1_1_1)&(act2'=P2_0_1);
    [choose] o1=1 & o2=1 & mem=0 & mem2=1 -> 1: (act'=P1_0_1)&(act2'=P2_1_1);
    [choose] o1=1 & o2=1 & mem=1 & mem2=1 -> 1: (act'=P1_1_1)&(act2'=P2_1_1);


	[act] pos=0 & act=0 & act2=0 -> 0.7225: (o1'=0)&(o2'=0) + 0.1275: (o1'=0)&(o2'=1) + 0.1275: (o1'=1)&(o2'=0) + 0.0225: (o1'=1)&(o2'=1);
    [act] pos=1 & act=0 & act2=0 -> 0.7225: (o1'=1)&(o2'=1) + 0.1275: (o1'=0)&(o2'=1) + 0.1275: (o1'=1)&(o2'=0) + 0.0225: (o1'=0)&(o2'=0);

    //[act] act!=0 | act2!=0 -> 0.125: (pos'=0)&(o1'=0)&(o2'=0) + 0.125: (pos'=0)&(o1'=0)&(o2'=1) + 0.125: (pos'=0)&(o1'=1)&(o2'=0) + 0.125: (pos'=0)&(o1'=1)&(o2'=1) + (pos'=1)&(o1'=0)&(o2'=0) + 0.125: (pos'=1)&(o1'=0)&(o2'=1) + 0.125: (pos'=1)&(o1'=1)&(o2'=0) + 0.125: (pos'=1)&(o1'=1)&(o2'=1);

    [act] pos=0 & act=0 & act2=1 -> 0.125: (pos'=0)&(o1'=0)&(o2'=0) + 0.125: (pos'=0)&(o1'=0)&(o2'=1) + 0.125: (pos'=0)&(o1'=1)&(o2'=0) + 0.125: (pos'=0)&(o1'=1)&(o2'=1) + (pos'=1)&(o1'=0)&(o2'=0) + 0.125: (pos'=1)&(o1'=0)&(o2'=1) + 0.125: (pos'=1)&(o1'=1)&(o2'=0) + 0.125: (pos'=1)&(o1'=1)&(o2'=1);
    [act] pos=0 & act=0 & act2=2 -> 0.125: (pos'=0)&(o1'=0)&(o2'=0) + 0.125: (pos'=0)&(o1'=0)&(o2'=1) + 0.125: (pos'=0)&(o1'=1)&(o2'=0) + 0.125: (pos'=0)&(o1'=1)&(o2'=1) + (pos'=1)&(o1'=0)&(o2'=0) + 0.125: (pos'=1)&(o1'=0)&(o2'=1) + 0.125: (pos'=1)&(o1'=1)&(o2'=0) + 0.125: (pos'=1)&(o1'=1)&(o2'=1);
    [act] pos=0 & act=1 & act2=0 -> 0.125: (pos'=0)&(o1'=0)&(o2'=0) + 0.125: (pos'=0)&(o1'=0)&(o2'=1) + 0.125: (pos'=0)&(o1'=1)&(o2'=0) + 0.125: (pos'=0)&(o1'=1)&(o2'=1) + (pos'=1)&(o1'=0)&(o2'=0) + 0.125: (pos'=1)&(o1'=0)&(o2'=1) + 0.125: (pos'=1)&(o1'=1)&(o2'=0) + 0.125: (pos'=1)&(o1'=1)&(o2'=1);
    [act] pos=0 & act=2 & act2=0 -> 0.125: (pos'=0)&(o1'=0)&(o2'=0) + 0.125: (pos'=0)&(o1'=0)&(o2'=1) + 0.125: (pos'=0)&(o1'=1)&(o2'=0) + 0.125: (pos'=0)&(o1'=1)&(o2'=1) + (pos'=1)&(o1'=0)&(o2'=0) + 0.125: (pos'=1)&(o1'=0)&(o2'=1) + 0.125: (pos'=1)&(o1'=1)&(o2'=0) + 0.125: (pos'=1)&(o1'=1)&(o2'=1);
    [act] pos=0 & act=1 & act2=1 -> 0.125: (pos'=0)&(o1'=0)&(o2'=0) + 0.125: (pos'=0)&(o1'=0)&(o2'=1) + 0.125: (pos'=0)&(o1'=1)&(o2'=0) + 0.125: (pos'=0)&(o1'=1)&(o2'=1) + (pos'=1)&(o1'=0)&(o2'=0) + 0.125: (pos'=1)&(o1'=0)&(o2'=1) + 0.125: (pos'=1)&(o1'=1)&(o2'=0) + 0.125: (pos'=1)&(o1'=1)&(o2'=1);
    [act] pos=0 & act=1 & act2=2 -> 0.125: (pos'=0)&(o1'=0)&(o2'=0) + 0.125: (pos'=0)&(o1'=0)&(o2'=1) + 0.125: (pos'=0)&(o1'=1)&(o2'=0) + 0.125: (pos'=0)&(o1'=1)&(o2'=1) + (pos'=1)&(o1'=0)&(o2'=0) + 0.125: (pos'=1)&(o1'=0)&(o2'=1) + 0.125: (pos'=1)&(o1'=1)&(o2'=0) + 0.125: (pos'=1)&(o1'=1)&(o2'=1);
    [act] pos=0 & act=2 & act2=1 -> 0.125: (pos'=0)&(o1'=0)&(o2'=0) + 0.125: (pos'=0)&(o1'=0)&(o2'=1) + 0.125: (pos'=0)&(o1'=1)&(o2'=0) + 0.125: (pos'=0)&(o1'=1)&(o2'=1) + (pos'=1)&(o1'=0)&(o2'=0) + 0.125: (pos'=1)&(o1'=0)&(o2'=1) + 0.125: (pos'=1)&(o1'=1)&(o2'=0) + 0.125: (pos'=1)&(o1'=1)&(o2'=1);
    [act] pos=0 & act=2 & act2=2 -> 0.125: (pos'=0)&(o1'=0)&(o2'=0) + 0.125: (pos'=0)&(o1'=0)&(o2'=1) + 0.125: (pos'=0)&(o1'=1)&(o2'=0) + 0.125: (pos'=0)&(o1'=1)&(o2'=1) + (pos'=1)&(o1'=0)&(o2'=0) + 0.125: (pos'=1)&(o1'=0)&(o2'=1) + 0.125: (pos'=1)&(o1'=1)&(o2'=0) + 0.125: (pos'=1)&(o1'=1)&(o2'=1);

    [act] pos=1 & act=0 & act2=1 -> 0.125: (pos'=0)&(o1'=0)&(o2'=0) + 0.125: (pos'=0)&(o1'=0)&(o2'=1) + 0.125: (pos'=0)&(o1'=1)&(o2'=0) + 0.125: (pos'=0)&(o1'=1)&(o2'=1) + (pos'=1)&(o1'=0)&(o2'=0) + 0.125: (pos'=1)&(o1'=0)&(o2'=1) + 0.125: (pos'=1)&(o1'=1)&(o2'=0) + 0.125: (pos'=1)&(o1'=1)&(o2'=1);
    [act] pos=1 & act=0 & act2=2 -> 0.125: (pos'=0)&(o1'=0)&(o2'=0) + 0.125: (pos'=0)&(o1'=0)&(o2'=1) + 0.125: (pos'=0)&(o1'=1)&(o2'=0) + 0.125: (pos'=0)&(o1'=1)&(o2'=1) + (pos'=1)&(o1'=0)&(o2'=0) + 0.125: (pos'=1)&(o1'=0)&(o2'=1) + 0.125: (pos'=1)&(o1'=1)&(o2'=0) + 0.125: (pos'=1)&(o1'=1)&(o2'=1);
    [act] pos=1 & act=1 & act2=0 -> 0.125: (pos'=0)&(o1'=0)&(o2'=0) + 0.125: (pos'=0)&(o1'=0)&(o2'=1) + 0.125: (pos'=0)&(o1'=1)&(o2'=0) + 0.125: (pos'=0)&(o1'=1)&(o2'=1) + (pos'=1)&(o1'=0)&(o2'=0) + 0.125: (pos'=1)&(o1'=0)&(o2'=1) + 0.125: (pos'=1)&(o1'=1)&(o2'=0) + 0.125: (pos'=1)&(o1'=1)&(o2'=1);
    [act] pos=1 & act=2 & act2=0 -> 0.125: (pos'=0)&(o1'=0)&(o2'=0) + 0.125: (pos'=0)&(o1'=0)&(o2'=1) + 0.125: (pos'=0)&(o1'=1)&(o2'=0) + 0.125: (pos'=0)&(o1'=1)&(o2'=1) + (pos'=1)&(o1'=0)&(o2'=0) + 0.125: (pos'=1)&(o1'=0)&(o2'=1) + 0.125: (pos'=1)&(o1'=1)&(o2'=0) + 0.125: (pos'=1)&(o1'=1)&(o2'=1);
    [act] pos=1 & act=1 & act2=1 -> 0.125: (pos'=0)&(o1'=0)&(o2'=0) + 0.125: (pos'=0)&(o1'=0)&(o2'=1) + 0.125: (pos'=0)&(o1'=1)&(o2'=0) + 0.125: (pos'=0)&(o1'=1)&(o2'=1) + (pos'=1)&(o1'=0)&(o2'=0) + 0.125: (pos'=1)&(o1'=0)&(o2'=1) + 0.125: (pos'=1)&(o1'=1)&(o2'=0) + 0.125: (pos'=1)&(o1'=1)&(o2'=1);
    [act] pos=1 & act=1 & act2=2 -> 0.125: (pos'=0)&(o1'=0)&(o2'=0) + 0.125: (pos'=0)&(o1'=0)&(o2'=1) + 0.125: (pos'=0)&(o1'=1)&(o2'=0) + 0.125: (pos'=0)&(o1'=1)&(o2'=1) + (pos'=1)&(o1'=0)&(o2'=0) + 0.125: (pos'=1)&(o1'=0)&(o2'=1) + 0.125: (pos'=1)&(o1'=1)&(o2'=0) + 0.125: (pos'=1)&(o1'=1)&(o2'=1);
    [act] pos=1 & act=2 & act2=1 -> 0.125: (pos'=0)&(o1'=0)&(o2'=0) + 0.125: (pos'=0)&(o1'=0)&(o2'=1) + 0.125: (pos'=0)&(o1'=1)&(o2'=0) + 0.125: (pos'=0)&(o1'=1)&(o2'=1) + (pos'=1)&(o1'=0)&(o2'=0) + 0.125: (pos'=1)&(o1'=0)&(o2'=1) + 0.125: (pos'=1)&(o1'=1)&(o2'=0) + 0.125: (pos'=1)&(o1'=1)&(o2'=1);
    [act] pos=1 & act=2 & act2=2 -> 0.125: (pos'=0)&(o1'=0)&(o2'=0) + 0.125: (pos'=0)&(o1'=0)&(o2'=1) + 0.125: (pos'=0)&(o1'=1)&(o2'=0) + 0.125: (pos'=0)&(o1'=1)&(o2'=1) + (pos'=1)&(o1'=0)&(o2'=0) + 0.125: (pos'=1)&(o1'=0)&(o2'=1) + 0.125: (pos'=1)&(o1'=1)&(o2'=0) + 0.125: (pos'=1)&(o1'=1)&(o2'=1);

endmodule
	

module df
    sink : bool init false;
    [act] !sink -> discount: true + 1-discount: (sink'=true);
endmodule

module clk
    c : [0..2] init 0;
    [in] c=0 -> 1: (c'=2);
    [choose] c=1 -> 1: (c'=2);
    [act] c=2 -> 1: (c'=1);
endmodule

// reward
rewards "rew"
	c=2 & pos=0 & act=0 & act2=0 : -2;
    c=2 & pos=1 & act=0 & act2=0 : -2;

    c=2 & pos=0 & act=0 & act2=1 : -101;
    c=2 & pos=0 & act=0 & act2=2 : 9;
    c=2 & pos=0 & act=1 & act2=0 : -101;
    c=2 & pos=0 & act=2 & act2=0 : 9;
    c=2 & pos=0 & act=1 & act2=1 : -50;
    c=2 & pos=0 & act=1 & act2=2 : -100;
    c=2 & pos=0 & act=2 & act2=1 : -100;
    c=2 & pos=0 & act=2 & act2=2 : 20;
    
    c=2 & pos=1 & act=0 & act2=1 : 9;
    c=2 & pos=1 & act=0 & act2=2 : -101;
    c=2 & pos=1 & act=1 & act2=0 : 9;
    c=2 & pos=1 & act=2 & act2=0 : -101;
    c=2 & pos=1 & act=1 & act2=1 : 20;
    c=2 & pos=1 & act=1 & act2=2 : -100;
    c=2 & pos=1 & act=2 & act2=1 : -100;
    c=2 & pos=1 & act=2 & act2=2 : -50;
endrewards

// target
label "goal" = sink=true;

