pomdp

// 2 | x x x x x
// 1 | x   x   x
// 0 | x   x   x
// y ____________
//   x 0 1 2 3 4

// can go in this direction
formula u = y<2;
formula r = y=2 & x<4;
formula d = y>0 & (x=0 | x=2 | x=4);
formula l = y=2 & x>0;

// target cell
formula goal = x=2 & y=0;
//formula bad = (x=0 | x=4) & y=0;

// updates of coordinates (if possible)
formula yu = u ? (y+1) : y;
formula xr = r ? (x+1) : x;
formula yd = d ? (y-1) : y;
formula xl = l ? (x-1) : x;

// corresponding observables
observable "u" = clk=1 & u;
observable "r" = clk=1 & r;
observable "d" = clk=1 & d;
observable "l" = clk=1 & l;
observable "goal" = goal;
//observable "bad" = bad;

const double succ = 0.6;
const double slipside = 0.18;
const double slipback = 0.04;

// modules

module clock
    // 0 - init, 1 - drive
    clk : [0..1] init 0;

    // random placement
    [place] clk=0 -> (clk'=1);
    
    // drive
    [up] 	clk=1 -> true;
    [right] clk=1 -> true;
    [down] 	clk=1 -> true;
    [left]  clk=1 -> true;
endmodule

module maze

	x : [-1..4] init -1;
    y : [-1..3] init -1;
	
	// initialisation
	[place] true ->
		  1/10 :    (x'=0)&(y'=0)
        + 1/10 :    (x'=0)&(y'=1)
		+ 1/10 :    (x'=0)&(y'=2)
		+ 1/10 :    (x'=1)&(y'=2)
		+ 1/10 :    (x'=2)&(y'=1)
		+ 1/10 :    (x'=2)&(y'=2)
		+ 1/10 :    (x'=3)&(y'=2)
		+ 1/10 :    (x'=4)&(y'=0)
		+ 1/10 :    (x'=4)&(y'=1)
		+ 1/10 :    (x'=4)&(y'=2)
		;

	// moving around the maze (all combinations)
    
    // [up]    !bad -> succ: (y'=yu) + slipside: (x'=xr) + slipside: (x'=xl) + slipback: (y'=yd);
    // [right] !bad -> succ: (x'=xr) + slipside: (y'=yu) + slipside: (y'=yd) + slipback: (x'=xl);
    // [down]  !bad -> succ: (y'=yd) + slipside: (x'=xr) + slipside: (x'=xl) + slipback: (y'=yu);
    // [left]  !bad -> succ: (x'=xl) + slipside: (y'=yu) + slipside: (y'=yd) + slipback: (x'=xr);

    [up]    true -> succ: (y'=yu) + (1-succ): true;
	[right] true -> succ: (x'=xr) + (1-succ): true;
	[down]  true -> succ: (y'=yd) + (1-succ): true;
	[left]  true -> succ: (x'=xl) + (1-succ): true;
	
endmodule

// rewards

rewards "steps"
	clk=1: 1;
endrewards

